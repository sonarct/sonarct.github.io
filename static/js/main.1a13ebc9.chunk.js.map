{"version":3,"sources":["components/Bar.module.css","App.module.css","components/GenderSwitch.module.css","components/WeatherWidget.module.css","constants.js","helpers.js","components/Bar.jsx","components/WeatherParams.jsx","components/CityCard.jsx","components/BestCity.jsx","components/CityList.jsx","components/GenderSwitch.jsx","components/IdealWeather.jsx","components/WeatherWidget.jsx","hooks.js","App.js","serviceWorker.js","index.js","components/CityCard.module.css"],"names":["module","exports","bar","container","button","switch","selected","loader","leftColumn","rightColumn","additional","IDEAL_WEATHER","MALE","temp","humidity","FEMALE","HUMIDITY_EFFECT","API_KEY","getVectorLength","_ref","_ref2","_ref3","Object","slicedToArray","x1","y1","_ref4","x2","y2","Math","sqrt","pow","convertValueToColor","value","green","round","red","concat","Bar","size","react_default","a","createElement","className","styles","style","height","backgroundColor","WeatherParams","props","CityCard","city","comfort","name","components_WeatherParams","main","components_Bar","BestCity","components_CityCard","CityList","list","map","key","GenderSwitch","onSelect","cn","defineProperty","onClick","IdealWeather","WeatherWidget","_useWeatherApi","_useState","useState","_useState2","loading","setLoading","_useState3","_useState4","weatherData","setWeatherData","useEffect","cityList","cities","join","link","fetch","then","response","json","catch","error","console","warn","mock","useWeatherApi","_useWeatherApi2","gender","setGender","react_loader_spinner_default","type","color","width","idealWeather","idealPoint","sorted","reduce","acc","cityPoint","push","sort","b","worstCityComfort","length","item","sortCitiesByWeather","_cityList","toArray","best","other","slice","_best","bestCity","components_BestCity","components_IdealWeather","components_GenderSwitch","components_CityList","App","components_WeatherWidget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a13ebc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Bar_bar__tlAt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__bqxEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GenderSwitch_button__2emZS\",\"switch\":\"GenderSwitch_switch__1XVCv\",\"selected\":\"GenderSwitch_selected__1imj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"WeatherWidget_loader__1nLqg\",\"container\":\"WeatherWidget_container__Y8iD2\",\"leftColumn\":\"WeatherWidget_leftColumn__uuyp5\",\"rightColumn\":\"WeatherWidget_rightColumn__1pKNm\",\"additional\":\"WeatherWidget_additional__3ivfW\"};","export const IDEAL_WEATHER = {\n  MALE: {\n    temp: 21,\n    humidity: 50\n  },\n  FEMALE: {\n    temp: 22,\n    humidity: 50\n  }\n};\n\n// Decrease humidity effect to make results more objective\nexport const HUMIDITY_EFFECT = 0.1;\nexport const API_KEY = '152e76584bc4fae880c2ebf122fb397b';\n","import { HUMIDITY_EFFECT } from './constants';\n\n/**\n * @param {[Number, Number]}\n * @param {[Number, Number]}\n * @return {Number}\n */\nfunction getVectorLength ([x1, y1], [x2, y2]) {\n  return Math.sqrt(Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2));\n}\n\n/**\n * @param {Object[]} cities\n * @param {{\n *   temp: Number,\n *   humidity: Number\n * }} idealWeather\n * @return {Array[]}\n */\nexport function sortCitiesByWeather (cities, idealWeather) {\n  const idealPoint = [ idealWeather.temp, idealWeather.humidity * HUMIDITY_EFFECT ];\n\n  const weights = cities.reduce((acc, city) => {\n    const cityPoint = [ city.main.temp, city.main.humidity * HUMIDITY_EFFECT ];\n    acc.push([city, Math.round(getVectorLength(cityPoint, idealPoint) * 100) / 100]);\n    return acc\n  }, []);\n  \n  const sorted = weights.sort((a, b) => a[1] - b[1]);\n  const worstCityComfort = sorted[sorted.length - 1][1];\n    \n  return sorted.map(item => [ item[0], 100 - (Math.round(item[1] * 100 / worstCityComfort)) ]);\n}\n\nexport function formatTemp (temp) {\n  return `${ Math.round(temp * 10) / 10 }Â°C`;\n}\n\n/**\n * @param {Number} value\n * @return {String}\n */\nexport function convertValueToColor (value) {\n  const green = Math.round(value * 255 / 100);\n  const red = Math.round((100 - value) * 255 / 100);\n  return `rgb(${red},${green},0`\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertValueToColor} from '../helpers';\nimport styles from './Bar.module.css';\n\nconst propTypes = {\n  size: PropTypes.number\n};\n\nfunction Bar ({ size }) {\n  return (\n    <div\n      className={ styles.bar }\n      style={{\n        height: `${ size }%`,\n        backgroundColor: convertValueToColor(size)\n      }}\n    />\n  )\n}\n\nBar.propTypes = propTypes;\n\nexport default Bar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatTemp} from '../helpers';\n\nconst propTypes = {\n  temp: PropTypes.number,\n  humidity: PropTypes.number\n};\n\nfunction WeatherParams (props) {\n  return (\n    <div>\n      <div>\n        <span>Temperature: </span>\n        <span><b>{ formatTemp(props.temp) }</b></span>\n      </div>\n      <div>\n        <span>Humidity: </span>\n        <span><b>{ props.humidity }%</b></span>\n      </div>\n    </div>\n  )\n}\n\nWeatherParams.propTypes = propTypes;\n\nexport default WeatherParams;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Bar from './Bar';\nimport styles from './CityCard.module.css';\nimport WeatherParams from './WeatherParams';\n\nconst propTypes = {\n  city: PropTypes.object,\n  comfort: PropTypes.number\n};\n\nfunction CityCard({ city, comfort }) {\n  return (\n    <div className={ styles.container }>\n      <div>\n        <div><b>{ city.name }</b></div>\n        <br/>\n        <WeatherParams\n          temp={ city.main.temp }\n          humidity={ city.main.humidity }\n        />\n        <br/>\n        <div>Level of comfort: <b>{ Math.round(comfort) }%</b></div>\n      </div>\n      <div className={ styles.comfort }>\n        <Bar size={ comfort } />\n      </div>\n    </div>\n  )\n}\n\nCityCard.propTypes = propTypes;\n\nexport default CityCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CityCard from './CityCard';\n\nconst propTypes = {\n  city: PropTypes.shape({\n    main: PropTypes.shape({\n      temp: PropTypes.number,\n      humidity: PropTypes.number\n    }),\n    comfort: PropTypes.number,\n  })\n};\n\nfunction BestCity({ city, comfort }) {\n  return (\n    <div>\n      <h3>City with the most ideal weather conditions:</h3>\n      <CityCard\n        city={ city }\n        comfort={ comfort }\n      />\n    </div>\n  )\n}\n\nBestCity.propTypes = propTypes;\n\nexport default BestCity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CityCard from './CityCard';\n\nconst propTypes = {\n  list: PropTypes.arrayOf(PropTypes.array)\n};\n\nfunction CityList(props) {\n  return (\n    <div>\n      <h3>Rating of cities:</h3>\n      {\n        props.list.map(([ city, comfort ]) => {\n          return (\n            <CityCard\n              key={ city.name }\n              city={ city }\n              comfort={ comfort }\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nCityList.propTypes = propTypes;\n\nexport default CityList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './GenderSwitch.module.css';\n\nconst propTypes = {\n  selected: PropTypes.string,\n  onSelect: PropTypes.func\n};\n\nfunction GenderSwitch ({ onSelect, selected }) {\n  return (\n    <div>\n      <h3>Choose preferred gender:</h3>\n      <div className={ styles.button }>\n        <div\n          className={ cn([ styles.switch, { [styles.selected]: selected === 'FEMALE' } ]) }\n          onClick={ () => onSelect('FEMALE') }\n        >\n          Female\n        </div>\n        <div\n          className={ cn([ styles.switch, { [styles.selected]: selected === 'MALE' } ]) }\n          onClick={ () => onSelect('MALE')}\n        >\n          Male\n        </div>\n      </div>\n    </div>\n  )\n}\n\nGenderSwitch.propTypes = propTypes;\n\nexport default GenderSwitch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WeatherParams from './WeatherParams';\n\nconst propTypes = {\n  temp: PropTypes.number,\n  humidity: PropTypes.number\n};\n\nfunction IdealWeather ({ temp, humidity }) {\n  return (\n    <div>\n      <h3>Ideal Climate Conditions:</h3>\n      <WeatherParams\n        temp={ temp }\n        humidity={ humidity }\n      />\n    </div>\n  )\n}\n\nIdealWeather.propTypes = propTypes;\n\nexport default IdealWeather;\n","import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { IDEAL_WEATHER } from '../constants';\nimport BestCity from './BestCity';\nimport CityList from './CityList';\nimport GenderSwitch from './GenderSwitch';\nimport IdealWeather from './IdealWeather';\nimport { sortCitiesByWeather } from '../helpers';\nimport { useWeatherApi } from '../hooks';\nimport styles from './WeatherWidget.module.css';\n\nfunction WeatherWidget() {\n  const [ loading, weatherData ] = useWeatherApi();\n  const [ gender, setGender ] = useState('MALE');\n\n  if (loading) {\n    return (\n      <Loader\n        style={ styles.loader }\n        type=\"ThreeDots\"\n        color=\"#333333\"\n        height=\"100\"\n        width=\"100\"\n      />\n    )\n  }\n\n  const idealWeather = IDEAL_WEATHER[gender];\n  const cityList = sortCitiesByWeather(weatherData, idealWeather);\n  const [ best, ...other ] = cityList;\n  const [ bestCity, comfort ] = best;\n  const { temp, humidity } = idealWeather;\n\n  return (\n    <div className={ styles.container }>\n      <div className={ styles.leftColumn }>\n        <BestCity\n          city={ bestCity }\n          comfort={ comfort }\n        />\n        <div className={ styles.additional }>\n          <IdealWeather\n            temp={ temp }\n            humidity={ humidity }\n          />\n          <GenderSwitch\n            onSelect={ setGender }\n            selected={ gender }\n          />\n        </div>\n      </div>\n      <div className={ styles.rightColumn}>\n        <CityList\n          list={ other }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherWidget;\n","import { useEffect, useState } from 'react';\nimport cities from './data/cities';\nimport mock from './data/mock';\nimport { API_KEY } from './constants';\n\nexport function useWeatherApi () {\n  const [ loading, setLoading ] = useState(true);\n  const [ weatherData, setWeatherData ] = useState([]);\n\n  useEffect(() => {\n    const cityList = cities.join(',');\n    const link = `http://api.openweathermap.org/data/2.5/group?id=${ cityList }&units=metric&APPID=${ API_KEY }`;\n\n    fetch(link).then(response => response.json()).then(json => {\n      setWeatherData(json.list);\n      setLoading(false);\n    }).catch(error => {\n      console.warn(error);\n      // Fallback to mocked date in case of blocked API\n      setWeatherData(mock.list);\n      setLoading(false);\n    })\n  }, []);\n\n  return [ loading, weatherData ];\n}\n","import React from 'react';\nimport WeatherWidget from './components/WeatherWidget';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={ styles.container }>\n      <WeatherWidget />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CityCard_container__1YWA8\",\"comfort\":\"CityCard_comfort__WfE45\"};"],"sourceRoot":""}